import {
  $f,
  $h,
  $l,
  Ah,
  B,
  Bf,
  Bl,
  Cf,
  Cl,
  Df,
  Dh,
  Dl,
  Ef,
  Eh,
  Fh,
  Fl,
  Gf,
  Gh,
  Hf,
  If,
  Kf,
  Kh,
  Lh,
  Ll,
  M,
  Mh,
  Ml,
  Nf,
  Nh,
  Nl,
  Oe,
  Of,
  Oh,
  Ol,
  Ph,
  Pl,
  Q,
  Qf,
  Qh,
  Rf,
  Rh,
  Rl,
  Sh,
  Sl,
  Tf,
  U,
  Uf,
  Uh,
  Vl,
  Wf,
  Wl,
  X,
  Xl,
  Yl,
  Zl,
  _f,
  _h,
  af,
  at,
  be,
  bh,
  bl,
  cf,
  ci,
  df,
  dh,
  ef,
  ff,
  fh,
  gf,
  gh,
  ht,
  it,
  jf,
  jh,
  kh,
  kl,
  lf,
  lh,
  mf,
  mh,
  nf,
  of,
  pf,
  ph,
  qf,
  qh,
  ql,
  rf,
  sf,
  sh,
  tf,
  uh,
  vf,
  vh,
  vl,
  wf,
  wh,
  x,
  xf,
  xh,
  xl,
  yf,
  yh,
  zf
} from "./chunk-AISTHODZ.js";
import "./chunk-DV2UYVRC.js";
import "./chunk-F4AF7QOS.js";
export {
  Wl as AbstractUserDataWriter,
  Lh as AggregateField,
  qh as AggregateQuerySnapshot,
  Uh as Bytes,
  Ah as CACHE_SIZE_UNLIMITED,
  wh as CollectionReference,
  fh as DocumentReference,
  sf as DocumentSnapshot,
  Kh as FieldPath,
  Qh as FieldValue,
  vh as Firestore,
  U as FirestoreError,
  jh as GeoPoint,
  Eh as LoadBundleTask,
  dh as Query,
  Vl as QueryCompositeFilterConstraint,
  vl as QueryConstraint,
  rf as QueryDocumentSnapshot,
  Bl as QueryEndAtConstraint,
  Pl as QueryFieldFilterConstraint,
  Nl as QueryLimitConstraint,
  Cl as QueryOrderByConstraint,
  of as QuerySnapshot,
  $l as QueryStartAtConstraint,
  nf as SnapshotMetadata,
  it as Timestamp,
  qf as Transaction,
  Bf as WriteBatch,
  Oe as _DatabaseId,
  ht as _DocumentKey,
  X as _EmptyAppCheckTokenProvider,
  Q as _EmptyAuthCredentialsProvider,
  at as _FieldPath,
  ci as _TestingHooks,
  uh as _cast,
  B as _debugAssert,
  be as _isBase64Available,
  M as _logWarn,
  sh as _validateIsNotUsedTogether,
  pf as addDoc,
  tf as aggregateFieldEqual,
  ef as aggregateQuerySnapshotEqual,
  Dl as and,
  jf as arrayRemove,
  Qf as arrayUnion,
  Xl as average,
  xh as clearIndexedDbPersistence,
  _h as collection,
  mh as collectionGroup,
  lh as connectFirestoreEmulator,
  Zl as count,
  yf as deleteDoc,
  Kf as deleteField,
  Mh as disableNetwork,
  gh as doc,
  Gh as documentId,
  Sh as enableIndexedDbPersistence,
  Dh as enableMultiTabIndexedDbPersistence,
  kh as enableNetwork,
  ql as endAt,
  Ll as endBefore,
  bh as ensureFirestoreConfigured,
  Ef as executeWrite,
  Rf as getAggregateFromServer,
  vf as getCountFromServer,
  af as getDoc,
  lf as getDocFromCache,
  ff as getDocFromServer,
  df as getDocs,
  wf as getDocsFromCache,
  _f as getDocsFromServer,
  Ph as getFirestore,
  zf as increment,
  Rh as initializeFirestore,
  kl as limit,
  Ml as limitToLast,
  Oh as loadBundle,
  Df as memoryEagerGarbageCollector,
  xf as memoryLocalCache,
  Cf as memoryLruGarbageCollector,
  Fh as namedQuery,
  If as onSnapshot,
  Tf as onSnapshotsInSync,
  Sl as or,
  xl as orderBy,
  Nf as persistentLocalCache,
  Of as persistentMultipleTabManager,
  $f as persistentSingleTabManager,
  Rl as query,
  ph as queryEqual,
  yh as refEqual,
  Uf as runTransaction,
  Gf as serverTimestamp,
  mf as setDoc,
  Hf as setIndexConfiguration,
  x as setLogLevel,
  cf as snapshotEqual,
  Fl as startAfter,
  Ol as startAt,
  Yl as sum,
  $h as terminate,
  gf as updateDoc,
  Nh as waitForPendingWrites,
  bl as where,
  Wf as writeBatch
};
//# sourceMappingURL=firebase_firestore.js.map
